#!/usr/bin/python3
#
# Xilinx Memory INIT file output
#
# 07-23-2015 E. Brombaugh

import numpy as np

def write_meminit(fname, data):
    # open output file and add header
    fh = open(fname, "w", encoding="utf-8")
    fh.write("// dec_coeff_init.v: memory init data\n")
    fh.write("// Auto-generated by write_meminit.py\n")

    # Set up memory array
    mem = np.zeros(1024, dtype=np.int)
    i = 0
    for coeff in data:
        mem[i] = coeff
        i+=1
        
    # iterate over 64 lines of regular data bits
    for i in np.arange(64):
        fh.write(".INIT_{0:0=2X}(256'h".format(i))

        for j in np.arange(15,-1,-1):
            value = mem[i*16+j]&0xffff
            fh.write("{0:0=4x}".format(value))
        fh.write("),\n")

    # iterate over 8 lines of parity bits   
    for i in np.arange(8):
        fh.write(".INITP_{0:0=2X}(256'h".format(i))

        for j in np.arange(63,-1,-1):
            value = (mem[(i<<7)|(j<<1)]>>16)&3
            value = value | (((mem[(i<<7)|(j<<1)|1]>>16)&3)<<2)
            fh.write("{0:1x}".format(value))

        if(i==7):
            fh.write(")\n")
        else:
            fh.write("),\n")

    fh.close()

    
